plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("kotlin-kapt")
    id 'kotlin-parcelize'
    alias(libs.plugins.dagger.hilt.android)
}

android {

    buildFeatures {
        buildConfig = true
    }
    compileSdk 34

    defaultConfig {
        applicationId "com.test.fdj"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_URL", "\"https://www.thesportsdb.com/api/v1/json/50130162/\""

        }
        debug {
            //noinspection GradlePath
            applicationIdSuffix 'debug'
            buildConfigField "String", "API_URL", "\"https://www.thesportsdb.com/api/v1/json/50130162/\""

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }
    namespace 'com.test.fdj'
}

dependencies {

    def composeBom = libs.androidx.compose.bom
    implementation composeBom
    androidTestImplementation composeBom

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.navigation.compose
    testImplementation libs.junit
    testImplementation libs.junit.jupiter
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    //LifeCycle
    implementation libs.androidx.lifecycle.common
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.viewmodel.compose

    //Retrofit
    implementation libs.retrofit
    implementation libs.gson
    implementation libs.converter.gson
    implementation libs.logging.interceptor

    //Coroutines
    implementation libs.kotlinx.coroutines.android
   // implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    //Mockito
    debugImplementation libs.mockito.inline

    //Material components
    implementation libs.material
    implementation libs.androidx.activity.compose
    implementation libs.androidx.compose.runtime
    implementation libs.androidx.compose.foundation
    implementation libs.androidx.compose.material.iconsExtended
    implementation libs.androidx.compose.animation.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material.icons.core
    implementation libs.androidx.compose.material3.windowSizeClass
    implementation libs.androidx.compose.material
    implementation libs.androidx.compose.material3
    implementation libs.androidx.compose.ui

    //Glide
    implementation libs.glide
    annotationProcessor libs.compiler

    // Android Studio Preview support
    implementation libs.androidx.ui.tooling.preview
    debugImplementation libs.androidx.ui.tooling


    implementation libs.androidx.material.icons.core

    // Optional - Integration with activities
    implementation libs.androidx.activity.compose
    implementation libs.lifecycle.viewmodel.compose

    implementation libs.androidx.lifecycle.runtime.compose
    implementation(libs.coil.compose)
    debugImplementation(libs.ui.tooling)

    // dagger Hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.compiler)
    implementation (libs.androidx.hilt.navigation.compose)

    // required if you want to use Mockito for unit tests
    testImplementation libs.mockito.core
    testImplementation libs.core.testing
    testImplementation libs.kotlinx.coroutines.test




}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}
